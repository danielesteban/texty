name: ci

on:
  push:
    branches:
      - master

permissions:
  contents: read
  packages: write

concurrency:
  group: 'ci'
  cancel-in-progress: false

jobs:
  client:
    env:
      CLIENT: __CLIENT__
      EDITOR: __EDITOR__
      SERVER: __SERVER__
    outputs:
      version: ${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          cache-dependency-path: |
            editor/pnpm-lock.yaml
            game/pnpm-lock.yaml
            protocol/pnpm-lock.yaml
      - name: Install
        run: |
          pnpm -C protocol install
          pnpm -C game install
          pnpm -C editor install
      - name: Build
        run: |
          pnpm -C protocol build
          pnpm -C game build
          pnpm -C editor build
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/client
      - uses: docker/build-push-action@v6
        env:
          DOCKER_BUILD_SUMMARY: false
        with:
          context: game
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  server:
    outputs:
      version: ${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          cache-dependency-path: |
            protocol/pnpm-lock.yaml
            server/pnpm-lock.yaml
      - name: Install
        run: |
          pnpm -C protocol install
          pnpm -C server install
      - name: Build
        run: |
          pnpm -C protocol build
          pnpm -C server build
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/server
      - uses: docker/build-push-action@v6
        env:
          DOCKER_BUILD_SUMMARY: false
        with:
          context: server
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    if: vars.DEPLOYMENT_URL
    environment: 
      name: production
      url: ${{ vars.DEPLOYMENT_URL }}
    needs: [client, server]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        run: curl -f -s "${{ secrets.DEPLOYER_URL }}&client=${{ needs.client.outputs.version }}&server=${{ needs.server.outputs.version }}"
